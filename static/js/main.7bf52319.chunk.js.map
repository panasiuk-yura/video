{"version":3,"sources":["Video.jsx","App.js","reportWebVitals.js","index.js"],"names":["MainPlayerMob","playerRef","useRef","useState","isPlay","setIsPlay","isMuted","setIsMuted","className","onClick","ref","width","height","style","margin","volume","muted","loop","playing","playbackRate","playsinline","url","onEnded","current","seekTo","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOA8CeA,EA1CO,WACpB,IACMC,EAAYC,iBAAO,MAFC,EAGIC,oBAAS,GAHb,mBAGlBC,EAHkB,KAGVC,EAHU,OAIMF,oBAAS,GAJf,mBAIlBG,EAJkB,KAITC,EAJS,KAkB1B,OACE,sBACEC,UAAS,uBAAkBJ,EAAO,0BAA0B,IAC5DK,QAfe,WACjBF,GAAW,GACXF,GAAWD,IAWX,UAIE,qBAAKI,UAAU,uBAAf,SAAsC,uCACtC,cAAC,IAAD,CACEE,IAAKT,EACLU,MAAM,QACNC,OAAO,OACPC,MAAO,CAACC,OAAQ,UAChBC,OAAQ,EACRC,MAAOV,EACPW,MAAM,EACNC,QAASd,EACTe,aAAc,EACdC,aAAa,EACbC,IAlCM,mFAmCNC,QAzBY,WAChBrB,EAAUsB,QAAQC,OAAO,GACzBnB,GAAU,GACVE,GAAW,UCPAkB,MARf,WACE,OACE,qBAAKjB,UAAU,MAAf,SACE,cAAC,EAAD,OCMSkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7bf52319.chunk.js","sourcesContent":["import { useRef, useState } from 'react';\nimport Player from 'react-player';\n\n\nconst MainPlayerMob = () => {\n  const url = 'https://www.learningcontainer.com/wp-content/uploads/2020/05/sample-mp4-file.mp4';\n  const playerRef = useRef(null)\n  const [ isPlay, setIsPlay ] = useState(false);\n  const [ isMuted, setIsMuted ] = useState(true);\n\n  const handlePlay = () => {\n    setIsMuted(false);\n    setIsPlay(!isPlay);\n  }\n  \n  const handleEnd = () => {\n    playerRef.current.seekTo(0);\n    setIsPlay(false);\n    setIsMuted(true);\n  }\n  \n\n  return (\n    <div\n      className={`MainPlayerMob${isPlay?' MainPlayerMob--playing':'' }`}\n      onClick={handlePlay}\n    >\n      <div className=\"MainPlayerMob__cover\"><span>+</span></div>\n      <Player\n        ref={playerRef}\n        width='200px'\n        height='auto'\n        style={{margin: '0 auto'}}\n        volume={1}\n        muted={isMuted}\n        loop={false}\n        playing={isPlay}\n        playbackRate={1}\n        playsinline={true}\n        url={url}\n        onEnded={handleEnd}\n      />\n    </div>\n  )\n};\n\nexport default MainPlayerMob;","import './App.css';\nimport MainPlayerMob from './Video';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainPlayerMob />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}